#!/bin/bash

# Copyright 2014 Jan Pazdziora
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

function usage () {
	if [ -n "$1" ] ; then
		echo $1 >&2
	else
		echo "Start as docker run -h \$FQDN_HOSTNAME -e PASSWORD=\$THE_ADMIN_PASSWORD image" >&2
	fi
	exit 1
}

function stop_running () {
	systemctl stop-running
}
trap stop_running TERM

function update_server_ip_address () {
	kdestroy -A
	kinit -k
	(
		echo "server 127.0.0.1"
		echo "update delete $HOSTNAME_FQDN A"
		MY_IP=${IPA_SERVER_IP:-$( /sbin/ip addr show | awk '/inet .*global/ { split($2,a,"/"); print a[1]; }' | head -1 )}
		echo "update add $HOSTNAME_FQDN 180 A $MY_IP"
		echo "send"
		echo "quit"
	) | nsupdate -g
	kdestroy -A
}

systemd-tmpfiles --remove --create 2>&1 | grep -v 'Failed to replace specifiers' || :

rm -f /var/run/*.pid /run/systemctl-lite-running/*

CAN_EDIT_RESOLV_CONF=0
cp -f /etc/resolv.conf /etc/resolv.conf.docker
if echo '# test access' >> /etc/resolv.conf || umount /etc/resolv.conf 2> /dev/null ; then
	CAN_EDIT_RESOLV_CONF=1
	cp -f /etc/resolv.conf.docker /etc/resolv.conf
fi

if [ -f /etc/ipa/ca.crt ] ; then
	systemctl start sshd.service

	echo "FreeIPA server is already configured, starting the services."
	if [ "$CAN_EDIT_RESOLV_CONF" == "1" ] ; then
		if [ -f /etc/resolv.conf.ipa ] ; then
			perl -pe 's/^(nameserver).*/$1 127.0.0.1/' /etc/resolv.conf.ipa > /etc/resolv.conf
		fi
	fi
	systemctl start-enabled
	HOSTNAME_FQDN=$( hostname -f )
	while ! host $HOSTNAME_FQDN > /dev/null ; do
		sleep 5
	done
	update_server_ip_address
	host $HOSTNAME_FQDN
	echo "FreeIPA server started."
else

###########################################################################################################

    export prefix="/opt/ipa"
    [[ ! -d $prefix ]] && mkdir $prefix

    function linkdir() {
      [[ ! -d $1 ]] && mkdir -p ${prefix}${1}
      [[ ! -d $(basename $1) ]] && mkdir -p $(basename $1)
      ln -sf ${prefix}${1} $(basename $1)
    }
    function linkfile() {
      [[ ! -d "${prefix}$(basename $1)" ]] && mkdir "${prefix}$(basename $1)"
      [[ -f $1 ]] && cp $1 ${prefix}${1} || touch ${prefix}${1}
      ln -sf ${prefix}${1} $(basename $1)
    }

    # Setting up links directories
    linkdir /root
    linkdir /etc/dirsrv
    linkdir /etc/httpd
    linkdir /etc/ipa
    linkdir /etc/openldap
    linkdir /etc/pki
    linkdir /etc/pki-ca
    linkdir /etc/ssh
    linkdir /etc/sssd
    linkdir /etc/security
    linkdir /usr/share/ipa/html
    linkdir /usr/lib64/dirsrv/
    linkdir /var/named/data
    linkdir /var/run/dirsrv
    linkdir /var/lock/dirsrv
    linkdir /var/lib/dirsrv
    linkdir /var/lib/pki-ca
    linkdir /var/lib/ipa-client/sysrestore
    linkdir /var/lib/sss/pubconf/krb5.include.d
    linkdir /var/lib/authconfig/last
    linkdir /var/lib/certmonger
    linkdir /var/lib/ipa
    linkdir /var/log
    linkdir /var/kerberos/krb5kdc
    linkdir /etc/sysconfig/pki

    # Setting up link files
    linkfile /etc/passwd
    linkfile /etc/group
    linkfile /etc/nsswitch.conf
    linkfile /etc/krb5.conf
    linkfile /etc/krb5.keytab
    linkfile /etc/named.conf
    linkfile /etc/named.keytab
    linkfile /etc/ntp.conf
    linkfile /etc/resolv.conf
    linkfile /root/ca-agent.p12
    linkfile /root/cacert.p12
    linkfile /etc/sysconfig/authconfig
    linkfile /etc/sysconfig/dirsrv
    linkfile /etc/sysconfig/dirsrv-PKI-IPA
    linkfile /etc/sysconfig/dirsrv-REALM
    linkfile /etc/sysconfig/krb5kdc
    linkfile /etc/sysconfig/ntpd,pki-ca
    linkfile /etc/sysconfig/pki/ca/pki-ca

    # Install FreeIPA server
    echo "Updating system..."
    yum -y install deltarpm
    yum -y update

    echo "Installing freeipa"
    mkdir -p /run/lock ; yum install -y freeipa-server bind bind-dyndb-ldap perl bind-utils && yum clean all

    # To be able to debug
    yum install -y openssh-server strace lsof wget && yum clean all
    echo "root:$ROOTPASS" | chpasswd

###########################################################################################################

	systemctl start sshd.service

	HOSTNAME_FQDN=$( hostname -f )
	HOSTNAME_SHORT=${HOSTNAME_FQDN%%.*}
	DOMAIN=${HOSTNAME_FQDN#*.}
	if [ "$HOSTNAME_SHORT.$DOMAIN" != "$HOSTNAME_FQDN" ] ; then
		usage
	fi

	if [ -z "$PASSWORD" ] ; then
		usage
	fi

	REALM=${DOMAIN^^}

	DEBUG_OPT=
	if [ -n "$DEBUG" ] ; then
		DEBUG_OPT=-d
	fi

	if [ -z "$FORWARDER" ] ; then
		FORWARDER=$( awk '$1 == "nameserver" { print $2; exit }' /etc/resolv.conf )
	fi
	if [ "$FORWARDER" == '127.0.0.1' ] ; then
		FORWARDER=--no-forwarders
	else
		FORWARDER=--forwarder=$FORWARDER
	fi

	if [ "$CAN_EDIT_RESOLV_CONF" == "0" ] ; then
		find /usr -name bindinstance.py | xargs sed -i '/changing resolv.conf to point to ourselves/s/^/#/'
	fi

	if /usr/sbin/ipa-server-install -r $REALM -p $PASSWORD -a $PASSWORD -U $DEBUG_OPT --setup-dns $FORWARDER < /dev/null ; then
		sed -i 's/default_ccache_name/# default_ccache_name/' /etc/krb5.conf
		cp -f /etc/resolv.conf /etc/resolv.conf.ipa
		update_server_ip_address
		echo "FreeIPA server configured."
	else
		ret=$?
		echo "FreeIPA server configuration failed."
		exit $ret
	fi
fi

if perl -e '( -t ) ? exit 0 : exit 1' ; then
	echo 'Starting interactive shell.'
	/bin/bash
else
	echo 'Go loop.'
	while true ; do sleep 1000 ; done
fi

